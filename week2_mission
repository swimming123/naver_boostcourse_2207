{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"2주차_Aden_08_윤수영","provenance":[],"authorship_tag":"ABX9TyNzsQuGsS9tfIuvF61+4MCu"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MHxCqZQj1wc7","executionInfo":{"status":"ok","timestamp":1660388151846,"user_tz":-540,"elapsed":18429,"user":{"displayName":"윤수영","userId":"10960211917202992852"}},"outputId":"85a44fd5-d125-4b64-bd8b-499529c208de"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["cd \"/content/drive/My Drive/boostcourse\""],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pW_Eomwc2H_3","executionInfo":{"status":"ok","timestamp":1660388180550,"user_tz":-540,"elapsed":301,"user":{"displayName":"윤수영","userId":"10960211917202992852"}},"outputId":"da38e059-7378-4a27-a02f-68148acff351"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/My Drive/boostcourse\n"]}]},{"cell_type":"code","source":["!git clone https://github.com/swimming123/naver_boostcourse_2207.git"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9GAKpPh62Qzx","executionInfo":{"status":"ok","timestamp":1660388246032,"user_tz":-540,"elapsed":344,"user":{"displayName":"윤수영","userId":"10960211917202992852"}},"outputId":"5e11dbdd-6834-4d80-c48c-994f366366cd"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["fatal: destination path 'naver_boostcourse_2207' already exists and is not an empty directory.\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DfPCkQEdalQ2"},"outputs":[],"source":["#1 가위바위보\n","import random\n","#0 ~ 2 숫자를 랜덤으로 뽑아내는 코드\n","computer = random.randint(0, 2)\n","\n","#rsp == rock scissors paper\n","my = input (\"가위바위보\")\n","rcp(my)\n","\n","#출력\n","#나: 가위\n","#컴퓨터 : 바위\n","#컴퓨터 승리!"]},{"cell_type":"code","source":["import random\n","my = input(\"가위, 바위, 보 중 하나를 고르세요. \")\n","\n","com = random.randrange(1, 3) # 1 가위, 2 바위, 3 보\n","com_dict = {1:\"가위\", 2:\"바위\", 3:\"보\"} # 난수 1 ~ 3을 문자로 변환하는 딕셔너리\n","\n","print('나 : {}'.format(my))  # 사용자가 선택한 가위바위보 출력\n","print('컴퓨터 :{}'.format(com_dict[com])) # 컴퓨터가 선택한 가위바위보 출력, com에서 선택한 숫자를 key로 사용\n","\n","#사용자가 이기는 경우, 비길 경우, 컴퓨터가 이길 경우로 나눔\n","if (my=='가위' and com == 3 ) or (my=='바위' and com ==1) or (my== '보' and com ==2) :\n","    print(\"사용자 승리!\")\n","elif (my=='가위' and com==1) or (my=='바위' and com==2) or (my=='보' and com==3) :\n","    print(\"비겼습니다!\")\n","else :\n","    print(\"컴퓨터 승리!\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wxlfJOElccwx","executionInfo":{"status":"ok","timestamp":1658824094995,"user_tz":-540,"elapsed":2510,"user":{"displayName":"윤수영","userId":"10960211917202992852"}},"outputId":"35af17ca-3874-4831-f454-0bbcb953e220"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["가위, 바위, 보 중 하나를 고르세요. 가위\n","나 : 가위\n","컴퓨터 :바위\n","컴퓨터 승리!\n"]}]},{"cell_type":"code","source":["#2 연봉계산기\n","# 1200 이하 6%, 4600 이하 15%, 8800이하 24%, 1억5천 이하 35%, 3억 이하 38%, 5억 이하 40%, 5억 초과 42%\n","#월급입력\n","monthly_payment(monthly_payment)\n","\n","#출력\n","# 세전 연봉 : 3600만원\n","# 세후 연봉 : 3060만원\n"],"metadata":{"id":"C_b1UYDha77E"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pip install pylint"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"omi1i04ULaWG","executionInfo":{"status":"ok","timestamp":1659487775902,"user_tz":-540,"elapsed":8890,"user":{"displayName":"윤수영","userId":"10960211917202992852"}},"outputId":"582fb957-407d-4697-f6fa-9e624bc5b0ce"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting pylint\n","  Downloading pylint-2.14.5-py3-none-any.whl (488 kB)\n","\u001b[K     |████████████████████████████████| 488 kB 7.6 MB/s \n","\u001b[?25hRequirement already satisfied: tomli>=1.1.0 in /usr/local/lib/python3.7/dist-packages (from pylint) (2.0.1)\n","Collecting platformdirs>=2.2.0\n","  Downloading platformdirs-2.5.2-py3-none-any.whl (14 kB)\n","Collecting tomlkit>=0.10.1\n","  Downloading tomlkit-0.11.1-py3-none-any.whl (34 kB)\n","Requirement already satisfied: typing-extensions>=3.10.0 in /usr/local/lib/python3.7/dist-packages (from pylint) (4.1.1)\n","Collecting isort<6,>=4.2.5\n","  Downloading isort-5.10.1-py3-none-any.whl (103 kB)\n","\u001b[K     |████████████████████████████████| 103 kB 57.7 MB/s \n","\u001b[?25hCollecting astroid<=2.12.0-dev0,>=2.11.6\n","  Downloading astroid-2.11.7-py3-none-any.whl (251 kB)\n","\u001b[K     |████████████████████████████████| 251 kB 55.8 MB/s \n","\u001b[?25hCollecting mccabe<0.8,>=0.6\n","  Downloading mccabe-0.7.0-py2.py3-none-any.whl (7.3 kB)\n","Requirement already satisfied: dill>=0.2 in /usr/local/lib/python3.7/dist-packages (from pylint) (0.3.5.1)\n","Requirement already satisfied: wrapt<2,>=1.11 in /usr/local/lib/python3.7/dist-packages (from astroid<=2.12.0-dev0,>=2.11.6->pylint) (1.14.1)\n","Requirement already satisfied: setuptools>=20.0 in /usr/local/lib/python3.7/dist-packages (from astroid<=2.12.0-dev0,>=2.11.6->pylint) (57.4.0)\n","Collecting lazy-object-proxy>=1.4.0\n","  Downloading lazy_object_proxy-1.7.1-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (57 kB)\n","\u001b[K     |████████████████████████████████| 57 kB 6.6 MB/s \n","\u001b[?25hCollecting typed-ast<2.0,>=1.4.0\n","  Downloading typed_ast-1.5.4-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (843 kB)\n","\u001b[K     |████████████████████████████████| 843 kB 47.9 MB/s \n","\u001b[?25hInstalling collected packages: typed-ast, lazy-object-proxy, tomlkit, platformdirs, mccabe, isort, astroid, pylint\n","Successfully installed astroid-2.11.7 isort-5.10.1 lazy-object-proxy-1.7.1 mccabe-0.7.0 platformdirs-2.5.2 pylint-2.14.5 tomlkit-0.11.1 typed-ast-1.5.4\n"]}]},{"cell_type":"code","source":["pip install pep8 pylint"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"k0p6YJSlLrwG","executionInfo":{"status":"ok","timestamp":1659487994874,"user_tz":-540,"elapsed":3797,"user":{"displayName":"윤수영","userId":"10960211917202992852"}},"outputId":"df4a8d8f-e606-4ff5-8b8d-ed46d71a2887"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting pep8\n","  Downloading pep8-1.7.1-py2.py3-none-any.whl (41 kB)\n","\u001b[K     |████████████████████████████████| 41 kB 517 kB/s \n","\u001b[?25hRequirement already satisfied: pylint in /usr/local/lib/python3.7/dist-packages (2.14.5)\n","Requirement already satisfied: typing-extensions>=3.10.0 in /usr/local/lib/python3.7/dist-packages (from pylint) (4.1.1)\n","Requirement already satisfied: isort<6,>=4.2.5 in /usr/local/lib/python3.7/dist-packages (from pylint) (5.10.1)\n","Requirement already satisfied: tomli>=1.1.0 in /usr/local/lib/python3.7/dist-packages (from pylint) (2.0.1)\n","Requirement already satisfied: astroid<=2.12.0-dev0,>=2.11.6 in /usr/local/lib/python3.7/dist-packages (from pylint) (2.11.7)\n","Requirement already satisfied: dill>=0.2 in /usr/local/lib/python3.7/dist-packages (from pylint) (0.3.5.1)\n","Requirement already satisfied: platformdirs>=2.2.0 in /usr/local/lib/python3.7/dist-packages (from pylint) (2.5.2)\n","Requirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.7/dist-packages (from pylint) (0.11.1)\n","Requirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.7/dist-packages (from pylint) (0.7.0)\n","Requirement already satisfied: lazy-object-proxy>=1.4.0 in /usr/local/lib/python3.7/dist-packages (from astroid<=2.12.0-dev0,>=2.11.6->pylint) (1.7.1)\n","Requirement already satisfied: typed-ast<2.0,>=1.4.0 in /usr/local/lib/python3.7/dist-packages (from astroid<=2.12.0-dev0,>=2.11.6->pylint) (1.5.4)\n","Requirement already satisfied: setuptools>=20.0 in /usr/local/lib/python3.7/dist-packages (from astroid<=2.12.0-dev0,>=2.11.6->pylint) (57.4.0)\n","Requirement already satisfied: wrapt<2,>=1.11 in /usr/local/lib/python3.7/dist-packages (from astroid<=2.12.0-dev0,>=2.11.6->pylint) (1.14.1)\n","Installing collected packages: pep8\n","Successfully installed pep8-1.7.1\n"]}]},{"cell_type":"code","source":["pylint\n","\n","monthly_payment =int(input(\"월급을 입력해 주세요 ex) 300 : \")) #월급 입력\n","\n","yearly_payment = monthly_payment*12   # 연봉 계산\n","print ('세전 연봉 : %d 만원'%(yearly_payment))\n","\n","#연봉 구간에 따라 세율 계산 (연봉 - (연봉*세금))\n","if yearly_payment <=1200 : \n","  print ('세후 연봉 : {} 만원'.format(yearly_payment-(yearly_payment*0.06)))\n","elif yearly_payment <= 4600 : \n","  print ('세후 연봉 : {} 만원'.format(yearly_payment-(yearly_payment*0.15)))\n","elif yearly_payment <= 8800 : \n","  print ('세후 연봉 : {} 만원'.format(yearly_payment-(yearly_payment*0.24)))\n","elif yearly_payment <= 15000 : \n","  print ('세후 연봉 : {} 만원'.format(yearly_payment-(yearly_payment*0.35)))\n","elif yearly_payment <= 30000 : \n","  print ('세후 연봉 : {} 만원'.format(yearly_payment-(yearly_payment*0.38)))\n","elif yearly_payment <= 50000 : \n","  print ('세후 연봉 : {} 만원'.format(yearly_payment-(yearly_payment*0.40)))\n","else : \n","  print ('세후 연봉 : {} 만원'.format(yearly_payment-(yearly_payment*0.42)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":245},"id":"Z9wk4oIOoOqR","executionInfo":{"status":"error","timestamp":1659488022753,"user_tz":-540,"elapsed":453,"user":{"displayName":"윤수영","userId":"10960211917202992852"}},"outputId":"26cb0756-73ed-4028-8204-dab52b1d485f"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-6-f34e9e020296>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mpylint\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mmonthly_payment\u001b[0m \u001b[0;34m=\u001b[0m\u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"월급을 입력해 주세요 ex) 300 : \"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m#월급 입력\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0myearly_payment\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmonthly_payment\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0;36m12\u001b[0m   \u001b[0;31m# 연봉 계산\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'pylint' is not defined"]}]},{"cell_type":"code","source":["#3 학점 변환기\n","# 95 ~ 100 A+\n","# 90 ~ 94 A\n","# 85 ~ 89 B+\n","# 80 ~ 84 B\n","# 75 ~ 79 C+\n","# 70 ~ 74 C\n","# 65 ~ 69 D+\n","# 60 ~ 64 D\n","# ~ 60 F\n","\n","#이름과 점수 입력\n","grader(\"이호창\", 99)\n","\n","#출력\n","# 학생이름 : 이호창\n","# 점수 : 99점\n","# 학점 : A+"],"metadata":{"id":"gT6BYIOZbY2J"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["name = input(\"본인 이름을 입력해주세요 : \")\n","score = int(input(\"당신의 점수를 입력해주세요 : \"))\n","\n","print ('학생이름 : ', name)\n","print ('점수 : ', score)\n","\n","#학점 구간에 따라 if, elif, else 문 실행하여 학점 print\n","if score >= 95 : \n","  print('학점 : A+')\n","elif score <95 : \n","  print('학점 : A')\n","elif score <90 : \n","  print('학점 : B+')\n","elif score <85 : \n","  print('학점 : B')\n","elif score <80 : \n","  print('학점 : C+')\n","elif score <75 : \n","  print('학점 : C')\n","elif score <70 : \n","  print('학점 : D+')\n","elif score <65 : \n","  print('학점 : D')\n","else : \n","  print('학점 : F') "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"As4nX50WrYw9","executionInfo":{"status":"ok","timestamp":1658825521842,"user_tz":-540,"elapsed":4365,"user":{"displayName":"윤수영","userId":"10960211917202992852"}},"outputId":"92920400-b530-4c64-b78c-2bc992457ca1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["본인 이름을 입력해주세요 : 윤수영\n","당신의 점수를 입력해주세요 : 90\n","학생이름 :  윤수영\n","점수 :  90\n","학점 : A\n"]}]},{"cell_type":"code","source":["#버스 요금 계산기\n","# ~ 8세 미만 : 무료\n","# 8세 ~ 14세 미만 카드 450 현금 450\n","# 14세 ~ 20세 미만 카드 720 현금 1000원\n","# 20세 이상 카드 1200 현금 1300\n","# 75세 이상 : 무료\n","\n","age = int(input('버스 요금을 내실 분의 나이를 입력해주세요 : '))\n","fare = input (\"지불하실 수단을 입력해주세요. 현금 / 카드 : \")\n","\n","print ('나이 : ', age)\n","print ('지불유형 :', fare)\n","\n","#range 함수로 구간 지정 해보고 싶었으나 실패\n","#baby = range(8)\n","#children = range(8,14)\n","#teens = range(14,20)\n","#adult = range(20,75)\n","\n","\n","# 첫번째 조건은 나이로 설정 한 후 카드/현금 조건에 따라 버스 요금 출력\n","if age <8 :\n","  print(\"버스 요금 : 무료\")\n","elif age >=8 and age<14 : \n","  if fare == \"카드\" : \n","    print(\"버스 요금 : 450원\")\n","  else : \n","    print(\"버스 요금 : 450원\")\n","elif age>=14 and age<20 : \n","  if fare == \"카드\" : \n","    print(\"버스 요금 : 720원\")\n","  else : \n","    print(\"버스 요금 : 1000원\")\n","elif age>=20 and age<75 : \n","  if fare == \"카드\" : \n","    print(\"버스 요금 : 1200원\")\n","  else : \n","    print(\"버스 요금 : 1300원\")\n","else : \n","  print(\"버스 요금 : 무료\")\n","\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LlvpYHQrb_Vc","executionInfo":{"status":"ok","timestamp":1658827145310,"user_tz":-540,"elapsed":6950,"user":{"displayName":"윤수영","userId":"10960211917202992852"}},"outputId":"26e2201c-dc48-4443-9c52-6feb9a02201b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["버스 요금을 내실 분의 나이를 입력해주세요 : 23\n","지불하실 수단을 입력해주세요. 현금 / 카드 : 현금\n","나이 :  23\n","지불유형 : 현금\n","버스 요금 : 1300원\n"]}]}]}